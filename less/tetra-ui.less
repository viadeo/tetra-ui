/*! tetra-ui v1.4.8 - 2014 | (MIT Licence) (c) Viadeo/APVO Corp - inspired by Bootstrap (c) Twitter, Inc. (Apache 2 Licence) */

// Global variables

// Static files paths
@img-sprite-dir: "/v_img/global";
@img-buttons-dir: "/v_img/coreui/buttons";
@img-loaders-dir: "/v_img/profilev2";

// Fonts
@fonts-dir: "/css/core/fonts";
@fonts-version: "1382536154";
@font-stack: "Arial", sans-serif;

// Right To Left mode (arabic)
@rtl: false;

// Layout
@siteWidth:         980px;

// Responsive
@pageWidth: 85%;
@pageWidthM: 90%; // when reaching the tablet breakpoint
@pageWidthS: 97%; // when reaching the smartphone breakpoint

@pageWidthMax: 1020px;

@breakpointM: 768px; // breakpoint for tablets
@breakpointS: 480px; // breakpoint for smartphones

// Spacing
@spacingXs:         5px;
@spacingS:          10px;
@spacingM:          15px;
@spacingL:          20px;
@spacingXl:         30px;

// Grayscale
@black:             #000000;
@blackLight:        lighten(@black, 18%);
@grayDark:          lighten(@black, 25%);
@gray:              lighten(@black, 50%);
@grayLight:         lighten(@black, 75%);
@grayLighter:       lighten(@black, 90%);
@white:             #FFFFFF;

// Extended palette

@orange1: #f56600;
@orange2: #f1532e;
@orange3: #f78d2d;
@orange4: #feae35;

@green1: #019875;
@green2: #0c9f9b;
@green3: #53c1af;
@green4: #c6e6d7;

@blue1: #006aa8;
@blue2: #007bc2;
@blue3: #42a2d6;
@blue4: #1f668c;
@blue5: #7dcde3;

@purple1: #471d63;
@purple2: #685985;
@purple3: #685985;
@purple4: #685985;

@pageBg: #e8e9eb;

// Colors
@green:             #829b13;
@yellow:            #ffd520;
@orange:            @orange1;

@blue:              #007de3;
@blueSoft:          #83a0b9;
@blueDarker:        darken(@blue, 20%);
@blueDark:          darken(@blue, 10%);
@blueLight:         lighten(desaturate(@blue, 35%), 20%);
@blueLighter:       lighten(desaturate(@blue, 35%), 40%);
@blueBright:				#0065AE;
@borderColor:       tint(@blueSoft, 63%);
@panelBackground:   tint(@blueSoft, 92%);
@panelBorder:       tint(@blueSoft, 78%);
@panelBorderDarker: tint(@blueSoft, 42%);
@overlayBorder:     shade(@blueSoft, 70%);

@premiumColor: #ffbb12;

// Button Colors
@buttonPrimaryBgColor:     #ffd724;
@buttonPrimaryEndColor:    #ffc906;
@buttonPrimaryHoverColor:  #ffc906;
@buttonPrimaryBorderColor: #ffbb02;
@buttonPrimaryTextColor:   @blackLight;

@buttonDefaultBgColor:     #fafafa;
@buttonDefaultEndColor:    #ebebeb;
@buttonDefaultHoverColor:  #e8e8e8;
@buttonDefaultBorderColor: #d5d5d5;
@buttonDefaultTextColor:   @blackLight;

@buttonTerBgColor:         lighten(@green2, 4%);
@buttonTerHoverColor:      darken(@green2, 3%);
@buttonTerBorderColor:     @green2;
@buttonTerTextColor:       @white;

@highlightColor:    #F4F2CA;

// Link colors
@linkColor:         @blue;
@linkColorHover:    shade(@linkColor, 10%);

// Typography
@baseFontSize:      12px;
@smallFontSize:     @baseFontSize - 1;
@baseFontColor:     tint(@black, 15%);
@baseFontFamily:    Arial, sans-serif;
@baseLineHeight:    1.4em;

// Border Radius
@borderRadiusXs: 2px;
@borderRadiusS: 3px;
@borderRadiusMS: 5px;
@borderRadiusM: 6px;
@borderRadiusL: 10px;

// Forms
@inputBackground:	@white;
@inputBorder: #c5c7c5;
@inputBorderFocus: @blue2;
@inputDisabledBackground: @grayLighter;
@inputSelectedControl: #344957;

// Dropdowns
@dropdownBackground: 			@white;
@dropdownBorder: 				rgba(0,0,0,.2);
@dropdownLinkColor: 			@grayDark;
@dropdownLinkColorHover: 		@white;
@dropdownLinkBackgroundHover: 	@linkColor;

// Form states and alerts
// -------------------------
@warningText: 		#c09853;
@warningBackground: #fcf8e3;
@warningBorder: 	darken(spin(@warningBackground, -10), 3%);

@errorText:         #d54243;
@errorBackground:   lighten(@errorText, 58%);
@errorBorder:       @errorText;

@successText: @green2;
@successBackground: @green2;
@successBorder: @green2;

@infoText: 			#3a87ad;
@infoBackground: 	#d9edf7;
@infoBorder: 		darken(spin(@infoBackground, -10), 7%);

// Forms requirements from bootstrap
@gridColumns:		12;
@gridColumnWidth:	60px;
@gridGutterWidth:	20px;
// Mixins
// Snippets of reusable CSS to develop faster and keep code readable

// Clearfix for clearing floats like a boss h5bp.com/q -> No presentational code needed :)
.clearfixHack() {
    zoom: 1;
    &:before,
    &:after {
        display: table;
        content: "";
        zoom: 1;
        *display: inline;
    }
    &:after {
        clear: both;
    }
}

// Fonts
#font {
    .sansSerif(@weight: normal, @size: @baseFontSize, @color: @baseFontColor, @lineHeight: @baseLineHeight) {
       font-family: Arial, sans-serif;
       font-size: @size;
       font-weight: @weight;
       line-height: @lineHeight;
    }
    .code(@weight: normal, @size: @baseFontSize, @color: @baseFontColor, @lineHeight: @baseLineHeight) {
        font-family: Monaco, Andale Mono, Courier New, monospace;
        font-size: @size;
        font-weight: @weight;
        line-height: @lineHeight;
    }
    .helveticaBold () {
        font-family: "Helvetica", "Lucida Grande", Tahoma, Arial, Verdana, sans-serif;
        font-weight: bold;
    }
}
// For sass convertion
.font-sansSerif(@weight: normal, @size: @baseFontSize, @color: @baseFontColor, @lineHeight: @baseLineHeight) {
   font-family: Arial, sans-serif;
   font-size: @size;
   font-weight: @weight;
   line-height: @lineHeight;
}
.font-code(@weight: normal, @size: @baseFontSize, @color: @baseFontColor, @lineHeight: @baseLineHeight) {
    font-family: Monaco, Andale Mono, Courier New, monospace;
    font-size: @size;
    font-weight: @weight;
    line-height: @lineHeight;
}
.font-helveticaBold () {
    font-family: "Helvetica", "Lucida Grande", Tahoma, Arial, Verdana, sans-serif;
    font-weight: bold;
}


// Border Radius
.border-radius (@values) {
	border-radius: @values;
}
.border-radius-topleft (@size) {
    border-top-left-radius: @size;
}
.border-radius-topright (@size) {
    border-top-right-radius: @size;
}
.border-radius-bottomright (@size) {
    border-bottom-right-radius: @size;
}
.border-radius-bottomleft (@size) {
    border-bottom-left-radius: @size;
}
.border-radius-top (@size) {
    .border-radius-topleft (@size);
    .border-radius-topright (@size);
}
.border-radius-right (@size) {
    .border-radius-topright (@size);
    .border-radius-bottomright (@size);
}
.border-radius-right (@rtl, @size) when (@rtl = false) {
    .border-radius-topright (@size);
    .border-radius-bottomright (@size);
}
.border-radius-right (@rtl, @size) when (@rtl = true) {
    .border-radius-topleft (@size);
    .border-radius-bottomleft (@size);
}
.border-radius-bottom (@size) {
    .border-radius-bottomright (@size);
    .border-radius-bottomleft (@size);
}
.border-radius-left (@size) {
    .border-radius-topleft (@size);
    .border-radius-bottomleft (@size);
}
.border-radius-left (@rtl, @size) when (@rtl = false) {
    .border-radius-topleft (@size);
    .border-radius-bottomleft (@size);
}
.border-radius-left (@rtl, @size) when (@rtl = true) {
    .border-radius-topright (@size);
    .border-radius-bottomright (@size);
}

// Disable text selection
.user-select (@value) {
    -webkit-user-select: @value;
    -khtml-user-select: @value;
    -moz-user-select: @value;
    -o-user-select: @value;
    user-select: @value;
}

// Transitions
.transition (@transition) {
    -webkit-transition: @transition;
       -moz-transition: @transition;
         -o-transition: @transition;
            transition: @transition;
    // IE 10 supports the unprefixed form
}

// Box shadows
.box-shadow (@values: 0 0 2px @gray) {
    -webkit-box-shadow: @values;
    box-shadow: @values;
}

// Opacity
.opacity(@opacity: 100) {
    opacity: @opacity / 100;
    filter: ~"alpha(opacity=@{opacity})";
}


// Gradient Bar Colors for buttons and allerts
.gradientBar(@primaryColor, @secondaryColor) {
  #gradient > .vertical(@primaryColor, @secondaryColor);
}

// Gradients
#gradient {
  .horizontal(@startColor: #555, @endColor: #333) {
    background-color: @endColor;
    background-repeat: repeat-x;
    background-image: -moz-linear-gradient(left, @startColor, @endColor); // FF 3.6+
    background-image: -webkit-gradient(linear, left top, right top, color-stop(0%, @startColor), color-stop(100%, @endColor)); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(left, @startColor, @endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(left, @startColor, @endColor); // Opera 11.10
    background-image: linear-gradient(to right, @startColor, @endColor); // // IE 10 supports the unprefixed form
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)",@startColor,@endColor)); // IE9 and down
    *filter: none;
  }
  .vertical(@startColor: #555, @endColor: #333) {
    background-color: @endColor;
    background-repeat: repeat-x;
    background-image: -moz-linear-gradient(top, @startColor, @endColor); // FF 3.6+
    background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, @startColor), color-stop(100%, @endColor)); // Safari 4+, Chrome 2+
    background-image: -webkit-linear-gradient(top, @startColor, @endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(top, @startColor, @endColor); // Opera 11.10
    background-image: linear-gradient(to bottom, @startColor, @endColor); // IE 10 supports the unprefixed form
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@startColor,@endColor)); // IE9 and down
    *filter: none;
  }
  .directional(@startColor: #555, @endColor: #333, @deg: 45deg) {
    background-color: @endColor;
    background-repeat: repeat-x;
    background-image: -moz-linear-gradient(@deg, @startColor, @endColor); // FF 3.6+
    background-image: -webkit-linear-gradient(@deg, @startColor, @endColor); // Safari 5.1+, Chrome 10+
    background-image: -o-linear-gradient(@deg, @startColor, @endColor); // Opera 11.10
    background-image: linear-gradient(@deg, @startColor, @endColor); // IE 10 supports the unprefixed form
  }
  .vertical-three-colors(@startColor: #00b3ee, @midColor: #7a43b6, @colorStop: 50%, @endColor: #c3325f) {
    background-color: @endColor;
    background-repeat: no-repeat;
    background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), color-stop(@colorStop, @midColor), to(@endColor));
    background-image: -webkit-linear-gradient(@startColor, @midColor @colorStop, @endColor);
    background-image: -moz-linear-gradient(top, @startColor, @midColor @colorStop, @endColor);
    background-image: -o-linear-gradient(@startColor, @midColor @colorStop, @endColor);
    background-image: linear-gradient(@startColor, @midColor @colorStop, @endColor);
    filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@startColor,@endColor)); // IE9 and down, gets no color-stop at all for proper fallback
    *filter: none;
  }
}
// For sass convertion
.gradient-horizontal(@startColor: #555, @endColor: #333) {
  background-color: @endColor;
  background-repeat: repeat-x;
  background-image: -moz-linear-gradient(left, @startColor, @endColor); // FF 3.6+
  background-image: -webkit-gradient(linear, left top, right top, color-stop(0%, @startColor), color-stop(100%, @endColor)); // Safari 4+, Chrome 2+
  background-image: -webkit-linear-gradient(left, @startColor, @endColor); // Safari 5.1+, Chrome 10+
  background-image: -o-linear-gradient(left, @startColor, @endColor); // Opera 11.10
  background-image: linear-gradient(to right, @startColor, @endColor); // // IE 10 supports the unprefixed form
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=1)",@startColor,@endColor)); // IE9 and down
  *filter: none;
}
.gradient-vertical(@startColor: #555, @endColor: #333) {
  background-color: @endColor;
  background-repeat: repeat-x;
  background-image: -moz-linear-gradient(top, @startColor, @endColor); // FF 3.6+
  background-image: -webkit-gradient(linear, left top, left bottom, color-stop(0%, @startColor), color-stop(100%, @endColor)); // Safari 4+, Chrome 2+
  background-image: -webkit-linear-gradient(top, @startColor, @endColor); // Safari 5.1+, Chrome 10+
  background-image: -o-linear-gradient(top, @startColor, @endColor); // Opera 11.10
  background-image: linear-gradient(to bottom, @startColor, @endColor); // IE 10 supports the unprefixed form
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@startColor,@endColor)); // IE9 and down
  *filter: none;
}
.gradient-directional(@startColor: #555, @endColor: #333, @deg: 45deg) {
  background-color: @endColor;
  background-repeat: repeat-x;
  background-image: -moz-linear-gradient(@deg, @startColor, @endColor); // FF 3.6+
  background-image: -webkit-linear-gradient(@deg, @startColor, @endColor); // Safari 5.1+, Chrome 10+
  background-image: -o-linear-gradient(@deg, @startColor, @endColor); // Opera 11.10
  background-image: linear-gradient(@deg, @startColor, @endColor); // IE 10 supports the unprefixed form
}
.gradient-vertical-three-colors(@startColor: #00b3ee, @midColor: #7a43b6, @colorStop: 50%, @endColor: #c3325f) {
  background-color: @endColor;
  background-repeat: no-repeat;
  background-image: -webkit-gradient(linear, 0 0, 0 100%, from(@startColor), color-stop(@colorStop, @midColor), to(@endColor));
  background-image: -webkit-linear-gradient(@startColor, @midColor @colorStop, @endColor);
  background-image: -moz-linear-gradient(top, @startColor, @midColor @colorStop, @endColor);
  background-image: -o-linear-gradient(@startColor, @midColor @colorStop, @endColor);
  background-image: linear-gradient(@startColor, @midColor @colorStop, @endColor);
  filter: e(%("progid:DXImageTransform.Microsoft.gradient(startColorstr='%d', endColorstr='%d', GradientType=0)",@startColor,@endColor)); // IE9 and down, gets no color-stop at all for proper fallback
  *filter: none;
}

// Background clipping
.background-clip(@clip) {
    -webkit-background-clip: @clip;
       -moz-background-clip: @clip;
            background-clip: @clip;
}

// Fix text inherit
.text-inherit() {
	font-weight: inherit;
	font-size: inherit;
	color: inherit;
	line-height: inherit;
}

// Hyphenation
.hyphens() {
  -webkit-hyphens: auto;
  -moz-hyphens: auto;
  -ms-hyphens: auto;
  -o-hyphens: auto;
  hyphens: auto;
}

// Arrows
.arrow(@position: top, @size : 10px, @color :  black,  @borderWidth: 0, @borderColor : transparent){
  position: relative;

  .border (@position, @color) when (@position = top) { border-bottom-color: @color }
  .border (@position, @color) when (@position = right) { border-left-color: @color }
  .border (@position, @color) when (@position = bottom) { border-top-color: @color }
  .border (@position, @color) when (@position = left) { border-right-color: @color; }

  .position (@position, @size) when (@position = top) { bottom: 100%; margin-left: @size; left: 50%;  }
  .position (@position, @size) when (@position = right) { left: 100%; margin-top: @size; top: 50%; }
  .position (@position, @size) when (@position = bottom) { left: 50%; margin-left: @size; top: 100%; }
  .position (@position, @size) when (@position = left) { margin-top: @size; right: 100%; top: 50%;  }

  &:after, &:before {
    border: solid transparent;
    content: '';
    height: 0;
    width: 0;
    position: absolute;
    pointer-events: none;
  }

  &:after {
    .border(@position, @color);
    border-width: @size;
    .position(@position, @size * -1);
  }

  &:before {
    @outerSize: round(@borderWidth * 1.41421356);
    .border(@position, @borderColor);
    border-width: @size + @outerSize;
    .position(@position, (-1 * (@size + @outerSize)));
  }
}

.inner-arrow(@position: top, @size: 10px, @color:  black,  @borderWidth: 0, @borderColor: transparent) {
  position: relative;

  .border (@position, @color) when (@position = top) { border-top-color: @color }
  .border (@position, @color) when (@position = right) { border-right-color: @color }
  .border (@position, @color) when (@position = bottom) { border-bottom-color: @color }
  .border (@position, @color) when (@position = left) { border-left-color: @color }

  .position (@position, @size) when (@position = top) { top: 0; margin-left: @size; left: 50%; }
  .position (@position, @size) when (@position = right) { right: 0; margin-top: @size; top: 50%; }
  .position (@position, @size) when (@position = bottom) { left: 50%; margin-left: @size; bottom: 0; }
  .position (@position, @size) when (@position = left) { left: 0; margin-top: @size; top: 50%; }

  &:after, &:before {
    border: solid transparent;
    content: '';
    height: 0;
    margin: (@borderWidth * -1);
    pointer-events: none;
    position: absolute;
    width: 0;
  }

  &:after {
    .border(@position, @color);
    border-width: @size;
    .position(@position, (@size * -1));
  }

  &:before {
    @outerSize: round(@borderWidth * 1.41421356);
    .border(@position, @borderColor);
    border-width: (@size + @outerSize);
    .position(@position, (-1 * (@size + @outerSize)));
  }
}

// Deprecated !
#arrow {
  .down (@size, @color) {
     display: block;
     width: 0;
     height: 0;
     position: absolute;
     border-width: @size @size 0 @size;
     border-color: @color transparent transparent transparent;
     border-style: solid;
  }
}
// For sass convertion
.arrow-down (@size, @color) {
   display: block;
   width: 0;
   height: 0;
   position: absolute;
   border-width: @size @size 0 @size;
   border-color: @color transparent transparent transparent;
   border-style: solid;
}

// IE7 inline-block
.ie7-inline-block() {
  *display: inline; // IE7 inline-block hack
  *zoom: 1;
}

// FORMS

// Misc. use by forms
#font {
  .shorthand(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
    font-size: @size;
    font-weight: @weight;
    line-height: @lineHeight;
  }
}
// For sass convertion
.font-shorthand(@size: @baseFontSize, @weight: normal, @lineHeight: @baseLineHeight) {
  font-size: @size;
  font-weight: @weight;
  line-height: @lineHeight;
}


// Box sizing
.box-sizing(@boxmodel) {
  -webkit-box-sizing: @boxmodel;
     -moz-box-sizing: @boxmodel;
      -ms-box-sizing: @boxmodel;
          box-sizing: @boxmodel;
}

// Webkit-style focus
.tab-focus() {
  // Default
  outline: thin dotted #333;
  // Webkit
  outline: 5px auto -webkit-focus-ring-color;
  outline-offset: -2px;
}

// Placeholder text
.placeholder(@color: @placeholderText) {
  :-moz-placeholder {
    color: @color;
  }
  ::-webkit-input-placeholder {
    color: @color;
  }
}

// Right To Left mixins

.float-left (@rtl) when (@rtl = false) { float: left; }
.float-left (@rtl) when (@rtl = true) { float: right; }

.float-right (@rtl) when (@rtl = false) { float: right; }
.float-right (@rtl) when (@rtl = true) { float: left; }

.margin (@rtl, @top, @right, @bottom, @left) when (@rtl = false) { margin: @top @right @bottom @left; }
.margin (@rtl, @top, @right, @bottom, @left) when (@rtl = true) { margin: @top @left @bottom @right; }

.padding (@rtl, @top, @right, @bottom, @left) when (@rtl = false) { padding: @top @right @bottom @left; }
.padding (@rtl, @top, @right, @bottom, @left) when (@rtl = true) { padding: @top @left @bottom @right; }

.margin-left (@rtl, @value) when (@rtl = false) { margin-left: @value }
.margin-left (@rtl, @value) when (@rtl = true) { margin-right: @value }

.margin-right (@rtl, @value) when (@rtl = false) { margin-right: @value }
.margin-right (@rtl, @value) when (@rtl = true) { margin-left: @value }

.padding-left (@rtl, @value) when (@rtl = false) { padding-left: @value }
.padding-left (@rtl, @value) when (@rtl = true) { padding-right: @value }

.padding-right (@rtl, @value) when (@rtl = false) { padding-right: @value }
.padding-right (@rtl, @value) when (@rtl = true) { padding-left: @value }

.text-align-left (@rtl) when (@rtl = false) { text-align: left; }
.text-align-left (@rtl) when (@rtl = true) { text-align: right; }

.text-align-right (@rtl) when (@rtl = false) { text-align: right; }
.text-align-right (@rtl) when (@rtl = true) { text-align: left; }

.border-left (@rtl, @value) when (@rtl = false) { border-left: @value; }
.border-left (@rtl, @value) when (@rtl = true) { border-right: @value; }

.border-right (@rtl, @value) when (@rtl = false) { border-right: @value; }
.border-right (@rtl, @value) when (@rtl = true) { border-left: @value; }

.left (@rtl, @value) when (@rtl = false) { left: @value; }
.left (@rtl, @value) when (@rtl = true) { right: @value; }

.right (@rtl, @value) when (@rtl = false) { right: @value; }
.right (@rtl, @value) when (@rtl = true) { left: @value; }

.border-top-right-radius (@rtl, @value) when (@rtl = false) { border-top-right-radius: @value; }
.border-top-right-radius (@rtl, @value) when (@rtl = true) { border-top-left-radius: @value; }

.border-top-left-radius (@rtl, @value) when (@rtl = false) { border-top-left-radius: @value; }
.border-top-left-radius (@rtl, @value) when (@rtl = true) { border-top-right-radius: @value; }
